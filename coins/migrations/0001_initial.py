# Generated by Django 2.2 on 2019-04-27 09:13

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import mptt.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CatalogCoin',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('country', models.CharField(help_text='Страна выпуска', max_length=50)),
                ('currency', models.CharField(max_length=50)),
                ('face_value', models.IntegerField()),
                ('material', models.CharField(blank=True, help_text='Материал изготовления', max_length=150, null=True)),
                ('weight', models.FloatField(blank=True, help_text='Вес', null=True)),
                ('diameter', models.FloatField(blank=True, help_text='Диаметр', null=True)),
                ('thickness', models.FloatField(blank=True, help_text='Толщина', null=True)),
                ('ruler', models.CharField(blank=True, help_text='Правитель изображенный на монете', max_length=50, null=True)),
                ('year', models.IntegerField(blank=True, help_text='Год выпуска', null=True)),
                ('mintage', models.IntegerField(blank=True, help_text='Тираж', null=True)),
                ('description', models.TextField(blank=True, help_text='Описание', null=True)),
                ('catalog_image', models.ImageField(blank=True, null=True, upload_to='coin_images')),
                ('price', models.FloatField(blank=True, null=True)),
                ('mint', models.CharField(blank=True, help_text='Монетный двор', max_length=50, null=True)),
                ('theme', models.CharField(blank=True, max_length=250, null=True)),
                ('crause_number', models.CharField(blank=True, help_text='Номер по каталогу Краузе', max_length=10, null=True)),
                ('my_number', models.CharField(blank=True, max_length=10, null=True)),
                ('is_issued', models.BooleanField(default=True, help_text='Выпущена или запланирована')),
            ],
        ),
        migrations.CreateModel(
            name='Serie',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('country', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=250, unique=True)),
                ('coin_amount', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='children', to='coins.Serie')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Coin',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('condition', models.CharField(choices=[('unknown', 'неизвестно'), ('proof', 'proof'), ('BU', 'BU'), ('UNC', 'UNC')], default='unknown', max_length=50)),
                ('image', models.ImageField(blank=True, null=True, upload_to='coin_images')),
                ('status', models.CharField(choices=[('in_collection', 'в коллекции'), ('for_exchange', 'на обмен'), ('in_wishlist', 'в списке желаний'), ('in_storage', 'в запаснике'), ('exchanged', 'обмененно'), ('deleted', 'удаленно')], default='in_collection', max_length=20)),
                ('source', models.CharField(blank=True, max_length=250, null=True)),
                ('catalog_coin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coins', to='coins.CatalogCoin')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coins', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='catalogcoin',
            name='serie',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='coins', to='coins.Serie'),
        ),
        migrations.AddField(
            model_name='catalogcoin',
            name='series',
            field=models.ManyToManyField(related_name='series_coins', to='coins.Serie'),
        ),
        migrations.AlterUniqueTogether(
            name='catalogcoin',
            unique_together={('serie', 'theme', 'country', 'mint')},
        ),
    ]
